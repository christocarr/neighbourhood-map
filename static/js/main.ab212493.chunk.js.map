{"version":3,"sources":["images/menu.svg","components/Header.js","components/MapContainer.js","components/MarkerList.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","MapContainer","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","filteredMarkers","handleMarkerClick","clickedMarkerVenueId","defaultCenter","defaultZoom","stopMarkerAnimation","Map","withGoogleMap","lib","onClick","map","marker","index","position","lat","lng","animation","venueId","window","google","maps","Animation","BOUNCE","aria-label","concat","title","onCloseClick","streetNumber","postCode","tabIndex","containerElement","style","height","width","mapElement","Component","MarkerList","state","query","updateQuery","_this","setState","trim","showingMarkers","_this2","listIsOpen","toggleList","markers","handleListItemClick","handleKeyPress","handleMarkerFilter","match","RegExp","escapeRegExp","filter","test","sort","sortBy","htmlFor","id","type","placeholder","onChange","e","target","role","onKeyPress","src","require","alt","Footer","href","App","venues","zoom","handleToggle","input","fetch","then","res","json","data","response","catch","error","alert","venue","location","name","formattedAddress","push","components_Header","components_MapContainer","components_MarkerList","userInput","handleInputSearch","components_Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ab212493.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.1181d8d6.svg\";","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header'>\r\n      <h1 className='heading'>Neighbourhood Pizza</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","\r\nimport React, { Component } from 'react';\r\nimport { withGoogleMap, GoogleMap, Marker, InfoWindow } from 'react-google-maps'\r\n\r\nexport class MapContainer extends Component {\r\n\r\n  render() {\r\n    const {\r\n      filteredMarkers, \r\n      handleMarkerClick, \r\n      clickedMarkerVenueId,\r\n      defaultCenter,\r\n      defaultZoom,\r\n      stopMarkerAnimation,\r\n    } = this.props\r\n\r\n    const Map = withGoogleMap(props => (\r\n      <GoogleMap\r\n        onClick={() => stopMarkerAnimation()}\r\n        defaultCenter = {defaultCenter}\r\n        defaultZoom = {defaultZoom}\r\n      >\r\n      {/* loop through markers array and return a marker to the map */}\r\n      {filteredMarkers.map((marker, index) => (\r\n        <Marker key={index}\r\n          position= {{lat: marker.lat, lng: marker.lng}}\r\n          animation={clickedMarkerVenueId === marker.venueId ? window.google.maps.Animation.BOUNCE : null}\r\n          onClick={() => handleMarkerClick(marker.venueId, marker)}\r\n        >\r\n        {/* open infowindow if clicked marker is equal to marker id  */}\r\n        {clickedMarkerVenueId === marker.venueId && (\r\n          <InfoWindow \r\n            aria-label={`More details about ${marker.title}`}\r\n            className='infowindow'\r\n            onCloseClick={() => stopMarkerAnimation()}\r\n          >\r\n            <div>\r\n              <h3>{marker.title}</h3>\r\n              <p>{`${marker.streetNumber}, ${marker.postCode} `}</p>\r\n            </div>\r\n          </InfoWindow>)}\r\n        </Marker>\r\n      ))}\r\n      </GoogleMap>\r\n    ))\r\n\r\n    return (\r\n      <div className='map-container' tabIndex='0'>\r\n        <Map \r\n          containerElement= {\r\n            <div style={{ height: '86vh', width: '90vw' }} /> \r\n          }\r\n          mapElement={\r\n            <div style={{ height: '100%' }} tabIndex='0'  />\r\n          }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapContainer\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport escapeRegExp from 'escape-string-regexp'\r\nimport sortBy from 'sort-by'\r\n\r\nclass MarkerList extends Component {\r\n\r\n  state = {\r\n    query: ''\r\n  }\r\n\r\n  //input onChange handler\r\n  updateQuery = (query) => {\r\n    this.setState({ query: query.trim() })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { listIsOpen,\r\n            toggleList,\r\n            markers,\r\n            handleListItemClick,\r\n            handleKeyPress,\r\n            handleMarkerFilter\r\n          } = this.props\r\n      \r\n    // let venuesHasValue = false\r\n    // let markers = []\r\n    //check whether venues array is valid\r\n    // if(venues !== undefined && venues.length > 0 && venues!== null) {\r\n    //   venuesHasValue = true\r\n    // }\r\n    //if venues array is not empty then loop through and return only //data that is needed\r\n    // if (venuesHasValue) {\r\n    //   let marker = {}\r\n    //   venues.map(venue => {\r\n    //       marker = {\r\n    //         lat: venue.location.lat,\r\n    //         lng: venue.location.lng,\r\n    //         title: venue.name,\r\n    //         venueId: venue.id,\r\n    //         streetNumber: venue.location.formattedAddress[0],\r\n    //         postCode: venue.location.formattedAddress[3],\r\n    //     }\r\n    //     markers.push(marker)\r\n    //   })\r\n    // }\r\n    \r\n    let showingMarkers \r\n    if (this.state.query) {\r\n      const match = new RegExp(escapeRegExp(this.state.query), 'i')\r\n      showingMarkers = markers.filter((marker) => match.test(marker.title))\r\n    } else {\r\n      showingMarkers = markers\r\n    }\r\n\r\n    //sort list alphabetically\r\n    showingMarkers.sort(sortBy('title'))\r\n    \r\n    return (\r\n      <div>\r\n        {listIsOpen ? (\r\n          <div className='marker-list-open'>\r\n            <label htmlFor='search'>Search</label>\r\n            <input\r\n              aria-label='search for restuarants in this area'\r\n              id='search'\r\n              type='text' \r\n              placeholder='search for restuarant'\r\n              className='list-filter'\r\n              value={this.state.query}\r\n              onChange={(e) => {\r\n                this.updateQuery(e.target.value)\r\n                handleMarkerFilter(e.target.value, showingMarkers)\r\n              }}\r\n            />\r\n            <div className='marker-list-container'>\r\n              <ul className='venue-list' \r\n                role='menu'\r\n                aria-label='List of pizza and burger resuarants'>\r\n                {showingMarkers.map((marker, index) => {\r\n                  return (\r\n                    <li \r\n                      aria-label={marker.title}\r\n                      tabIndex='0'\r\n                      key={index}\r\n                      onClick={() => handleListItemClick(marker.venueId, marker)}\r\n                      onKeyPress={(e) => handleKeyPress(e, marker.venueId, marker)}\r\n                    >{marker.title}</li>\r\n                  )  \r\n                })}\r\n              </ul>\r\n              <div className='list-toggle-close'>\r\n                <img className='toggle-icon' src={require('../images/menu.svg')} alt='list closer' onClick={toggleList} \r\n                aria-label='Toggle to close the list of pizza and burger restuarants'/>\r\n              </div>\r\n            </div>\r\n          </div> \r\n        ) : (\r\n          <div className='marker-list-closed'>\r\n            <div className='list-toggle-open'>\r\n              <img className='toggle-icon' src={require('../images/menu.svg')} alt='list opener' \r\n              aria-label='Toggle to open a list of pizza and burger restuarants'\r\n              onClick={toggleList} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div> \r\n    )\r\n  }\r\n}\r\nexport default MarkerList","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer'>\r\n      <div className='credits'>\r\n        <div>\r\n          Icons made by <a href=\"https://www.flaticon.com/authors/those-icons\" title=\"Those Icons\">Those Icons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\">CC 3.0 BY</a>\r\n        </div>\r\n        <div>\r\n          Made with <a href='https://developer.foursquare.com/'>Foursquare</a>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react'\r\nimport Header from './components/Header'\r\nimport MapContainer from './components/MapContainer'\r\nimport MarkerList from './components/MarkerList'\r\nimport Footer from './components/Footer'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    defaultCenter: {\r\n      lat: 51.5055,\r\n      lng: -0.0754\r\n    } ,\r\n    defaultZoom: 12,\r\n    listIsOpen: false,\r\n    venues: [],\r\n    markers: [],\r\n    filteredMarkers: [],\r\n    clickedMarkerVenueId: null,\r\n    zoom: 14,\r\n    query: '',\r\n  }\r\n\r\n  //get six parking locations in a 2km radius from foursquare \r\n  componentDidMount() {\r\n    fetch('https://api.foursquare.com/v2/venues/search?ll=51.5055,-0.0754&query=burgers,pizza&limit=15&radius=2000&client_id=5MFR2FIONG3CCN5IXQBUE3HFBKEECHZZ0Q1XNZVPZQEZMZDQ&client_secret=XVR2PAUVWZSPQY5RY0HZV54ZMBBXM2CWG4RKCGGQUT0JC0OU&v=20181001')\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ venues: data.response.venues }))\r\n      .catch(error => {\r\n        alert(`There has been an error data from the Foursquare API. \r\n        Please refresh your browser and try again!\r\n        error: ${error}`)\r\n      }).then(() => {\r\n        let markers = []\r\n        let marker = {}\r\n        this.state.venues.map(venue => {\r\n        marker = {\r\n            lat: venue.location.lat,\r\n            lng: venue.location.lng,\r\n            title: venue.name,\r\n            venueId: venue.id,\r\n            streetNumber: venue.location.formattedAddress[0],\r\n            postCode: venue.location.formattedAddress[3],\r\n          }\r\n          markers.push(marker)\r\n          return markers\r\n        })\r\n        this.setState({ markers })\r\n        this.setState({ filteredMarkers: markers })\r\n      })\r\n  }\r\n\r\n  //function to open and close marker list\r\n  handleToggle = () => {\r\n    if (this.state.listIsOpen) {\r\n      this.setState({listIsOpen: false})\r\n    } else {\r\n      this.setState({listIsOpen: true})\r\n    }\r\n  }\r\n\r\n  handleMarkerFilter = (input, showingMarkers) => {\r\n    this.setState({ filteredMarkers: showingMarkers })\r\n    //if input field is empty set filtered markers to the original markers\r\n    if (input === '') {\r\n      this.setState({ filteredMarkers: this.state.markers})\r\n    }\r\n  }\r\n\r\n   //infoWindow handler\r\n   handleMarkerClick = (venueId, marker) =>  {\r\n    this.setState({ \r\n      clickedMarkerVenueId: venueId,\r\n      defaultCenter: {\r\n        lat: marker.lat,\r\n        lng: marker.lng\r\n      },\r\n      defaultZoom: this.state.zoom,\r\n     })\r\n  }\r\n\r\n  //when user uses Enter key instead of mouse button\r\n  handleKeyPress = (e, venueId, marker) => {\r\n    if (e.key === 'Enter') {\r\n      this.handleMarkerClick(venueId, marker)\r\n    }\r\n  }\r\n\r\n  //stop marker animation\r\n  stopMarkerAnimation = () => {\r\n    this.setState({ \r\n      clickedMarkerVenueId: -1,\r\n      defaultCenter: {\r\n        lat: 51.5055,\r\n        lng: -0.0754\r\n      } ,\r\n      defaultZoom: 13,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app' role='main'>\r\n        <Header />\r\n        <MapContainer\r\n          tabIndex='0'\r\n          defaultCenter={this.state.defaultCenter}\r\n          defaultZoom={this.state.defaultZoom}\r\n          markers={this.state.markers}\r\n          filteredMarkers={this.state.filteredMarkers}  \r\n          zoom={this.state.zoom}\r\n          handleMarkerClick={this.handleMarkerClick}\r\n          clickedMarkerVenueId={this.state.clickedMarkerVenueId}\r\n          stopMarkerAnimation={this.stopMarkerAnimation}\r\n        />\r\n        <MarkerList \r\n          markers={this.state.markers}\r\n          listIsOpen={this.state.listIsOpen}\r\n          toggleList={this.handleToggle}\r\n          handleListItemClick={this.handleMarkerClick}\r\n          handleKeyPress={this.handleKeyPress}\r\n          clickedMarkerVenueId={this.state.clickedMarkerVenueId}\r\n          userInput={this.state.query}\r\n          handleInputSearch={this.handleInputSearch}\r\n          handleMarkerFilter={this.handleMarkerFilter}\r\n        />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n// Google Maps API key: AIzaSyCIXjUR2aOOj9EGjnJVcG9pi3294fTp8yI\r\n//Foursquare Client ID: 5MFR2FIONG3CCN5IXQBUE3HFBKEECHZZ0Q1XNZVPZQEZMZDQ\r\n//Foursquare Client Secret: XVR2PAUVWZSPQY5RY0HZV54ZMBBXM2CWG4RKCGGQUT0JC0OU","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}